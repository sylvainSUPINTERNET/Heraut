version: '3'

services:
  web:
    container_name: "petsbnb_webapp"
    build:
      context: ./petsbnb_rework # make sure you downloaded the project and put the directory at the same root of this project
      dockerfile: DockerfileProd
    expose:
      - 3000
    ports:
      - 3000:3000
    volumes:
      - ./petsbnb_rework/:/app
  nginx:
    container_name: api-gateway
    #image: nginx-api
    build:
      context: ./Heraut/nginx
      dockerfile: DockerfileProd
    restart: always
    ports:
      - 8080:8080
      - 80:80
      - 433:433
    depends_on:
      - spring-boot-jpa-app
    links:
      - spring-boot-jpa-app
  spring-boot-jpa-app:
    container_name: spring-boot-jpa-app
    restart: always
    # these variables refers to the .env file
    image: ${DOCKER_REPOSITORY}:${TAG_DEV}${VERSION}
    build:
      context: ./Heraut
      dockerfile: DockerfileProd
    ports:
      - 4999:4999 # same as ports above, the api is accessible at 127.0.0.1:4999 (for postman)
    volumes:
      - /data/spring-boot-app
    stdin_open: true # docker run -i
  messagerie-service:
    container_name: messagerie-service
    environment:
      - PORT=3200
      - HOST=0.0.0.0
      - WS_PORT=9999
      - REDIS_SERVER_URL=${REDIS_SERVER_ENDPOINT}
      - REDIS_PORT=6379
    ports:
      - 3200:3200
      - 9999:9999 # WS
    build:
      context: ./messagerie-service/
      dockerfile: DockerfileProd
    restart: always

